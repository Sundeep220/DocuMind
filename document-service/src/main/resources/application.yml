

server:
  port: 8082

topics:
  retry: 'doc-status-updater.RETRY'
  dlt: 'doc-status-updater.DLT'

spring:
  application:
    name: document-service
  datasource:
    url: jdbc:postgresql://localhost:5432/DocuMind
    username: postgres
    password: admin
    database-platform: org.hibernate.dialect.PostgreSQLDialect
  jpa:
    hibernate:
      ddl-auto: update
    show-sql: true
    properties:
      hibernate:
        format_sql: true
    defer-datasource-initialization: true
  sql:
    init:
      mode: always
      platform: postgres
  kafka:
    topic:
      name: doc-upload
    producer:
      bootstrap-servers: ${SPRING_KAFKA_PRODUCER_BOOTSTRAP_SERVERS:${SPRING_KAFKA_BOOTSTRAP_SERVERS:localhost:9092}}
      key-serializer: org.apache.kafka.common.serialization.LongSerializer
      value-serializer: org.apache.kafka.common.serialization.StringSerializer
#    consumer:
#      bootstrap-servers: localhost:9092
#      group-id: doc-test-consumer
#      auto-offset-reset: earliest
#      key-deserializer: org.apache.kafka.common.serialization.LongDeserializer
#      value-deserializer: org.apache.kafka.common.serialization.StringDeserializer
    consumer:
      bootstrap-servers: ${SPRING_KAFKA_PRODUCER_BOOTSTRAP_SERVERS:${SPRING_KAFKA_BOOTSTRAP_SERVERS:localhost:9092}}
      group-id: doc-status-updater
      auto-offset-reset: earliest
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.apache.kafka.common.serialization.StringDeserializer


management:
  endpoints:
    web:
      exposure:
        include: "*"
  health:
    readiness-state:
      enabled: true
    liveness-state:
      enabled: true

  endpoint:
    shutdown:   #to enable shutdown endpoint in actuator to let the application gracefully shutdown and deregister from eureka
      access: "unrestricted"
    health:
      probes:
        enabled: true
  info:
    env:
      enabled: true

user:
  service:
    url: ${USER_SERVICE_URL:http://localhost:8081}


file:
  upload-dir: /uploads


